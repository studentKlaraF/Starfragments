// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeminarskaNaloga.Data;

#nullable disable

namespace SeminarskaNaloga.Migrations
{
    [DbContext(typeof(TrgovinaContext))]
    [Migration("20221206095655_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SeminarskaNaloga.Models.Artikel", b =>
                {
                    b.Property<int>("ArtikelId")
                        .HasColumnType("int");

                    b.Property<double>("cena")
                        .HasColumnType("float");

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("zaloga")
                        .HasColumnType("int");

                    b.HasKey("ArtikelId");

                    b.ToTable("Artikel", (string)null);
                });

            modelBuilder.Entity("SeminarskaNaloga.Models.Narocilo", b =>
                {
                    b.Property<int>("NarociloId")
                        .HasColumnType("int");

                    b.Property<int>("ArtikelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("kolicina")
                        .HasColumnType("int");

                    b.Property<float>("vrednost")
                        .HasColumnType("real");

                    b.HasKey("NarociloId");

                    b.HasIndex("ArtikelId");

                    b.ToTable("Narocilo", (string)null);
                });

            modelBuilder.Entity("SeminarskaNaloga.Models.Racun", b =>
                {
                    b.Property<int>("RacunId")
                        .HasColumnType("int");

                    b.Property<int>("NarociloId")
                        .HasColumnType("int");

                    b.Property<int>("UporabnikId")
                        .HasColumnType("int");

                    b.Property<float>("cena")
                        .HasColumnType("real");

                    b.Property<DateTime>("datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("kolicina")
                        .HasColumnType("int");

                    b.Property<float>("postnina")
                        .HasColumnType("real");

                    b.HasKey("RacunId");

                    b.HasIndex("NarociloId");

                    b.HasIndex("UporabnikId");

                    b.ToTable("Racun", (string)null);
                });

            modelBuilder.Entity("SeminarskaNaloga.Models.Uporabnik", b =>
                {
                    b.Property<int>("UporabnikId")
                        .HasColumnType("int");

                    b.Property<bool>("admin")
                        .HasColumnType("bit");

                    b.Property<string>("ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("priimek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stPoste")
                        .HasColumnType("int");

                    b.Property<int>("telefon")
                        .HasColumnType("int");

                    b.HasKey("UporabnikId");

                    b.ToTable("Uporabnik", (string)null);
                });

            modelBuilder.Entity("SeminarskaNaloga.Models.ZgodovinaNarocanja", b =>
                {
                    b.Property<int>("ZgodovinaNarocanjaId")
                        .HasColumnType("int");

                    b.Property<int>("NarociloId")
                        .HasColumnType("int");

                    b.Property<int>("UporabnikId")
                        .HasColumnType("int");

                    b.HasKey("ZgodovinaNarocanjaId");

                    b.HasIndex("NarociloId");

                    b.HasIndex("UporabnikId");

                    b.ToTable("ZgodovinaNarocanja", (string)null);
                });

            modelBuilder.Entity("SeminarskaNaloga.Models.Narocilo", b =>
                {
                    b.HasOne("SeminarskaNaloga.Models.Artikel", "Artikel")
                        .WithMany()
                        .HasForeignKey("ArtikelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artikel");
                });

            modelBuilder.Entity("SeminarskaNaloga.Models.Racun", b =>
                {
                    b.HasOne("SeminarskaNaloga.Models.Narocilo", "Narocilo")
                        .WithMany()
                        .HasForeignKey("NarociloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskaNaloga.Models.Uporabnik", "Uporabnik")
                        .WithMany()
                        .HasForeignKey("UporabnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Narocilo");

                    b.Navigation("Uporabnik");
                });

            modelBuilder.Entity("SeminarskaNaloga.Models.ZgodovinaNarocanja", b =>
                {
                    b.HasOne("SeminarskaNaloga.Models.Narocilo", "Narocilo")
                        .WithMany()
                        .HasForeignKey("NarociloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskaNaloga.Models.Uporabnik", "Uporabnik")
                        .WithMany()
                        .HasForeignKey("UporabnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Narocilo");

                    b.Navigation("Uporabnik");
                });
#pragma warning restore 612, 618
        }
    }
}
